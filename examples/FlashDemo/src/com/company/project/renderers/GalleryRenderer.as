package com.company.project.renderers{	import flash.events.*;	import flash.net.URLRequest;	import flash.display.Bitmap;	import flash.display.SimpleButton;		import framework.view.RendererBase;	import framework.controller.Controller;	import framework.controller.SWFAddress;	import com.company.project.data.Image;	public class GalleryRenderer extends RendererBase	{			public var menu_mc:Menu;		public var prev_btn:SimpleButton;		public var next_btn:SimpleButton;				public function GalleryRenderer( controller:Controller, width:int, height:int )		{			super( controller, width, height );		}				override public function render( source:String ):void		{			var count:int = 0;			for each( var item:Image in data.images.data ) { 			// loop over pages images				var image:Bitmap = controller.assets.fetch( item.url ); // get the image bitmap				image.x = 50 + 110 * (count++); 						// position images				image.y = 140;				addChild( image );										// add images to display list			}						prev_btn.addEventListener(MouseEvent.CLICK, onClickPrev);			next_btn.addEventListener(MouseEvent.CLICK, onClickNext);						if( data.images.prevPage == data.images.currentPage ) { 	// if there is not a previous page				prev_btn.visible = false;								// hide previous link			}			if( data.images.nextPage == data.images.currentPage ) {		// if there is not a next page				next_btn.visible = false;								// hide next button			}		}				override public function clear():void		{			prev_btn.removeEventListener(MouseEvent.CLICK, onClickPrev);			next_btn.removeEventListener(MouseEvent.CLICK, onClickNext);		}				private function onClickPrev(event:Event):void		{			SWFAddress.setValue( "site/gallery/?page="+data.images.prevPage );		}				private function onClickNext(event:Event):void		{			SWFAddress.setValue( "site/gallery/?page="+data.images.nextPage );		}	}}